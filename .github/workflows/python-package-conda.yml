name: Python Package using Conda

on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Add conda to system path
      run: |
        # $CONDA is an environment variable pointing to the root of the miniconda directory
        echo $CONDA/bin >> $GITHUB_PATH
    - name: Install dependencies
      run: |
        conda create -q -y --name testenv python=3.8 cython numpy pytest psutil pip
        conda install -c conda-forge pip numpy scipy coverage scikit-learn!=0.19.0 matplotlib numba ffmpeg libsndfile pysoundfile coveralls
    - name: Test with pytest
      run: |
        conda install pytest
        python setup.py install
        pip install -r requirements-dev.txt
        pip install -r requirements-test.txt
        if [ $DATABASE_URL == 'postgres://postgres@127.0.0.1/django_bulk_update_test' ]; then pip install -q psycopg2 ; fi
        if [ $DATABASE_URL == 'mysql://root@127.0.0.1/django_bulk_update_test' ]; then pip install -q 
        sh -c "if [ '$DATABASE_URL' = 'postgres://postgres@127.0.0.1/django_bulk_update_test' ]; then psql -c 'DROP DATABASE IF EXISTS django_bulk_update_test;' -U postgres; fi"
        sh -c "if [ '$DATABASE_URL' = 'postgres://postgres@127.0.0.1/django_bulk_update_test' ]; then psql -c 'create database django_bulk_update_test;' -U postgres; fi"
        sh -c "if [ '$DATABASE_URL' = 'mysql://root@127.0.0.1/django_bulk_update_test' ]; then mysql -e 'create database IF NOT EXISTS django_bulk_update_test CHARACTER SET utf8 COLLATE utf8_general_ci;'; fi"
        coverage run --source=django_bulk_update --omit='django_bulk_update/tests*' runtest.py
  armv64_job:
      name: Build and Test for arm64
      runs-on: ubuntu-20.04
      steps:
        - uses: actions/checkout@v2
        - name: Set up QEMU
          id: qemu
          uses: docker/setup-qemu-action@v1
        - name: Install and Run tests
          run: |
            docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
              arm64v8/ubuntu:20.04 \
              bash -exc 'apt-get update && apt-get -y install python3 python3-pip python3-venv curl && \
              python3 -m pip install virtualenv && python3 -m venv py38-venv && \
              source py38-venv/bin/activate && \
              cat /proc/cpuinfo && \
              python setup.py install && \
              pip install -r requirements-dev.txt && \
              pip install -r requirements-test.txt &&\
              if [ $DATABASE_URL == 'postgres://postgres@127.0.0.1/django_bulk_update_test' ]; then pip install -q psycopg2 ; fi && \
              if [ $DATABASE_URL == 'mysql://root@127.0.0.1/django_bulk_update_test' ]; then pip install -q && \                        
              sh -c "if [ '$DATABASE_URL' = 'postgres://postgres@127.0.0.1/django_bulk_update_test' ]; then psql -c 'DROP DATABASE IF EXISTS django_bulk_update_test;' -U postgres; fi" && \
              sh -c "if [ '$DATABASE_URL' = 'postgres://postgres@127.0.0.1/django_bulk_update_test' ]; then psql -c 'create database django_bulk_update_test;' -U postgres; fi" && \
              sh -c "if [ '$DATABASE_URL' = 'mysql://root@127.0.0.1/django_bulk_update_test' ]; then mysql -e 'create database IF NOT EXISTS django_bulk_update_test CHARACTER SET utf8 COLLATE utf8_general_ci;'; fi" && \
              coverage run --source=django_bulk_update --omit='django_bulk_update/tests*' runtest.py && \
              deactivate'      
        
